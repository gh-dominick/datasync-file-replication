sys_path: ./
namespace: ${customer}-${environment}
stacker_bucket: ${customer}-${environment}-${region}-stacker

common_parameters: &common_parameters
  CustomerName: ${customer}
  EnvironmentName: ${environment}
  VpcId: ${vpc_id}
  Subnet1: ${subnet1}
  Subnet2: ${subnet2}
  SshKey: ${ssh_key_name}

stacks:
  datasync-efs-source:
    template_path: templates/efs.yaml
    variables:
      << : *common_parameters
      ApplicationName: datasync
      CustomerName: ${customer}-source
      EfsEncrypted: true
  node-instance-source:
    template_path: templates/ec2.yaml
    variables:
      << : *common_parameters
      AmiId: ${ami_id}
      CustomerName: ${customer}-source
      SubnetId: ${subnet1}
      DefaultSecurityGroup: ${all_server_security_group}
      EfsClientSecurityGroup: ${output datasync-efs-source::EfsClientSecurityGroup}
      EfsFilesystemId: ${output datasync-efs-source::EfsId}
  datasync-efs-destination:
    template_path: templates/efs.yaml
    variables:
      << : *common_parameters
      ApplicationName: datasync
      CustomerName: ${customer}-destination
      EfsEncrypted: true
      Subnet1: ${subnet3}
      Subnet2: ${subnet4}
  node-instance-destination:
    template_path: templates/ec2.yaml
    variables:
      << : *common_parameters
      AmiId: ${ami_id}
      CustomerName: ${customer}-destination
      SubnetId: ${subnet1}
      DefaultSecurityGroup: ${all_server_security_group}
      EfsClientSecurityGroup: ${output datasync-efs-destination::EfsClientSecurityGroup}
      EfsFilesystemId: ${output datasync-efs-destination::EfsId}
  datasync-agent-sg:
    template_path: templates/security-group.yaml
    variables:
      << : *common_parameters
      ApplicationName: datasync-agent
  datasync-sg-https-ingress:
    template_path: templates/security-group-ingress.yaml
    variables:
      FromPort: 443
      ToPort: 443
      IpProtocol: tcp
      GroupId: ${output datasync-agent-sg::SecurityGroup}
      CidrIp: ${vpc_cidr}
  datasync-agent-destination-nfs-ingress:
    template_path: templates/security-group-ingress.yaml
    variables:
      FromPort: 2049
      ToPort: 2049
      IpProtocol: tcp
      GroupId: ${output datasync-efs-destination::EfsServerSecurityGroup}
      SourceSecurityGroupId: ${output datasync-agent-sg::SecurityGroup}
  datasync-vpce-sg:
    template_path: templates/security-group.yaml
    variables:
      << : *common_parameters
      ApplicationName: datasync-vpc-endpoint
  datasync-agent-https-ingress:
    template_path: templates/security-group-ingress.yaml
    variables:
      FromPort: 443
      ToPort: 443
      IpProtocol: tcp
      GroupId: ${output datasync-vpce-sg::SecurityGroup}
      SourceSecurityGroupId: ${output datasync-agent-sg::SecurityGroup}
  datasync-agent-ingress:
    template_path: templates/security-group-ingress.yaml
    variables:
      FromPort: 1024
      ToPort: 1064
      IpProtocol: tcp
      GroupId: ${output datasync-vpce-sg::SecurityGroup}
      SourceSecurityGroupId: ${output datasync-agent-sg::SecurityGroup}
  datasync-vpc-endpoint:
    template_path: templates/vpc-endpoint.yaml
    variables:
      << : *common_parameters
      ApplicationName: datasync
      EndpointService: datasync
      SubnetIds: ${subnet1}
      SecurityGroupIds: ${output datasync-vpce-sg::SecurityGroup}
      VpcEndpointType: Interface
  datasync-agent:
    template_path: templates/datasync-agent-asg.yaml
    variables:
      << : *common_parameters
      ApplicationName: datasync-agent
      AgentSecurityGroup: ${output datasync-agent-sg::SecurityGroup}
      AllServerSecurityGroup: ${all_server_security_group}
      EfsClientSecurityGroup: ${output datasync-efs-source::EfsClientSecurityGroup}
      DestinationEfsIp: ${output datasync-efs-destination::EfsMountTargetIp1}
      SourceLocationRegion: ${region}
      SourceEfsFilesystemId: ${output datasync-efs-source::EfsId}
      SourceSubnetId: ${subnet1}
      SyncTaskScheduleExpression: cron(05 * * * ? *)
      VpcEndpoint: ${output datasync-vpc-endpoint::DataSyncVpcInterfaceEndpointId}
      VpcEndpointSecurityGroupId: ${output datasync-vpce-sg::SecurityGroup}
      VpcEndpointInterfaceId: ${output datasync-vpc-endpoint::DataSyncVpcInterfaceNetworkInterfaceId}
